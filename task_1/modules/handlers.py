import datetime
import json
from .handle_exceptions import handle_exceptions


@handle_exceptions
def create_sample_cats(db):
    """
    –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–µ—Å—Ç–æ–≤–∏—Ö –¥–∞–Ω–∏—Ö (Create)
    """
    with open('sample_cats.json', 'r', encoding='utf-8')  as f:
        data = json.load(f)
        result = db.collection.insert_many(data)
        print(f"‚úÖ –£—Å–ø—ñ—à–Ω–æ –¥–æ–¥–∞–Ω–æ {len(result.inserted_ids)} —Ç–µ—Å—Ç–æ–≤–∏—Ö –∫–æ—Ç—ñ–≤")
        return result.inserted_ids


# –ß–ò–¢–ê–ù–ù–Ø (READ) –æ–ø–µ—Ä–∞—Ü—ñ—ó
@handle_exceptions
def read_all_cats(db):
    """
    –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤–∏–≤–µ–¥–µ–Ω–Ω—è –≤—Å—ñ—Ö –∑–∞–ø–∏—Å—ñ–≤ —ñ–∑ –∫–æ–ª–µ–∫—Ü—ñ—ó
    """
    cats = list(db.collection.find())
    
    if not cats:
        print("üì≠ –ö–æ–ª–µ–∫—Ü—ñ—è –∫–æ—Ç—ñ–≤ –ø–æ—Ä–æ–∂–Ω—è")
        return []
    
    print("\n" + "=" * 60)
    print("üìã –°–ü–ò–°–û–ö –í–°–Ü–• –ö–û–¢–Ü–í")
    print("=" * 60)
    
    for i, cat in enumerate(cats, 1):
        print(f"\n{i}. üê± –Ü–º'—è: {cat['name']}")
        print(f"   üìÖ –í—ñ–∫: {cat['age']} —Ä–æ–∫—ñ–≤")
        print(f"   üîß –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏: {', '.join(cat['features'])}")
        print(f"   üÜî ID: {cat['_id']}")
    
    print(f"\nüìä –í—Å—å–æ–≥–æ –∫–æ—Ç—ñ–≤: {len(cats)}")
    return cats


@handle_exceptions
def read_cat_by_name(db):
    """
    –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–æ—à—É–∫—É –∫–æ—Ç–∞ –∑–∞ —ñ–º'—è–º
    """
    name = input("\nüîç –í–≤–µ–¥—ñ—Ç—å —ñ–º'—è –∫–æ—Ç–∞ –¥–ª—è –ø–æ—à—É–∫—É: ").strip()
    
    if not name:
        print("‚ùå –ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å —ñ–º'—è –∫–æ—Ç–∞")
        return None
    
    cat = db.collection.find_one({"name": name})
    
    if cat:
        print("\n" + "=" * 50)
        print("‚úÖ –ö–Ü–¢ –ó–ù–ê–ô–î–ï–ù–ò–ô")
        print("=" * 50)
        print(f"üê± –Ü–º'—è: {cat['name']}")
        print(f"üìÖ –í—ñ–∫: {cat['age']} —Ä–æ–∫—ñ–≤")
        print(f"üîß –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏: {', '.join(cat['features'])}")
        print(f"üÜî ID: {cat['_id']}")
        return cat
    else:
        print(f"‚ùå –ö–æ—Ç–∞ –∑ —ñ–º'—è–º '{name}' –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")
        return None


# –û–ù–û–í–õ–ï–ù–ù–Ø (UPDATE) –æ–ø–µ—Ä–∞—Ü—ñ—ó
@handle_exceptions
def update_cat_age(db):
    """
    –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –≤—ñ–∫—É –∫–æ—Ç–∞ –∑–∞ —ñ–º'—è–º
    """
    name = input("\n‚úèÔ∏è –í–≤–µ–¥—ñ—Ç—å —ñ–º'—è –∫–æ—Ç–∞ –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –≤—ñ–∫—É: ").strip()
    
    if not name:
        print("‚ùå –ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å —ñ–º'—è –∫–æ—Ç–∞")
        return 0
    
    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ —ñ—Å–Ω—É—î –∫—ñ—Ç
    cat = db.collection.find_one({"name": name})
    if not cat:
        print(f"‚ùå –ö–æ—Ç–∞ –∑ —ñ–º'—è–º '{name}' –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")
        return 0
    
    print(f"üìä –ü–æ—Ç–æ—á–Ω–∏–π –≤—ñ–∫ –∫–æ—Ç–∞ '{name}': {cat['age']} —Ä–æ–∫—ñ–≤")
    
    new_age = int(input("–í–≤–µ–¥—ñ—Ç—å –Ω–æ–≤–∏–π –≤—ñ–∫: "))
    if new_age <= 0:
        print("‚ùå –í—ñ–∫ –ø–æ–≤–∏–Ω–µ–Ω –±—É—Ç–∏ –¥–æ–¥–∞—Ç–Ω—ñ–º —á–∏—Å–ª–æ–º")
        return 0
    
    result = db.collection.update_one(
        {"name": name},
        {
            "$set": {
                "age": new_age,
                "updated_at": datetime.datetime.now()
            }
        }
    )
    
    if result.modified_count > 0:
        print(f"‚úÖ –í—ñ–∫ –∫–æ—Ç–∞ '{name}' —É—Å–ø—ñ—à–Ω–æ –æ–Ω–æ–≤–ª–µ–Ω–æ –¥–æ {new_age} —Ä–æ–∫—ñ–≤")
    else:
        print(f"‚ÑπÔ∏è –î–∞–Ω—ñ –Ω–µ –∑–º—ñ–Ω–∏–ª–∏—Å—è (–≤—ñ–∫ –≤–∂–µ –±—É–≤ {new_age})")
        
    return result.modified_count


@handle_exceptions
def add_cat_feature(db):
    """
    –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –Ω–æ–≤–æ—ó —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –¥–æ —Å–ø–∏—Å–∫—É features –∫–æ—Ç–∞ –∑–∞ —ñ–º'—è–º
    """
    name = input("\nüîß –í–≤–µ–¥—ñ—Ç—å —ñ–º'—è –∫–æ—Ç–∞ –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏: ").strip()
    
    if not name:
        print("‚ùå –ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å —ñ–º'—è –∫–æ—Ç–∞")
        return 0
    
    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ —ñ—Å–Ω—É—î –∫—ñ—Ç
    cat = db.collection.find_one({"name": name})
    if not cat:
        print(f"‚ùå –ö–æ—Ç–∞ –∑ —ñ–º'—è–º '{name}' –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")
        return 0
    
    print(f"üìã –ü–æ—Ç–æ—á–Ω—ñ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –∫–æ—Ç–∞ '{name}': {', '.join(cat['features'])}")
    
    new_feature = input("–í–≤–µ–¥—ñ—Ç—å –Ω–æ–≤—É —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫—É: ").strip()
    
    if not new_feature:
        print("‚ùå –ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫—É")
        return 0
    
    result = db.collection.update_one(
        {"name": name},
        {
            "$push": {"features": new_feature},
            "$set": {"updated_at": datetime.datetime.now()}
        }
    )
    
    if result.modified_count > 0:
        print(f"‚úÖ –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫—É '{new_feature}' —É—Å–ø—ñ—à–Ω–æ –¥–æ–¥–∞–Ω–æ –∫–æ—Ç—É '{name}'")
        # –ü–æ–∫–∞–∑–∞—Ç–∏ –æ–Ω–æ–≤–ª–µ–Ω–∏–π —Å–ø–∏—Å–æ–∫ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫
        updated_cat = db.collection.find_one({"name": name})
        print(f"üìã –û–Ω–æ–≤–ª–µ–Ω—ñ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏: {', '.join(updated_cat['features'])}")
    else:
        print("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –¥–æ–¥–∞—Ç–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫—É")
        
    return result.modified_count
        

# –í–ò–î–ê–õ–ï–ù–ù–Ø (DELETE) –æ–ø–µ—Ä–∞—Ü—ñ—ó
@handle_exceptions
def delete_cat_by_name(db):
    """
    –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è –∑–∞–ø–∏—Å—É –∑ –∫–æ–ª–µ–∫—Ü—ñ—ó –∑–∞ —ñ–º'—è–º —Ç–≤–∞—Ä–∏–Ω–∏
    """
    name = input("\nüóëÔ∏è –í–≤–µ–¥—ñ—Ç—å —ñ–º'—è –∫–æ—Ç–∞ –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è: ").strip()
    
    if not name:
        print("‚ùå –ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å —ñ–º'—è –∫–æ—Ç–∞")
        return 0
    
    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ —ñ—Å–Ω—É—î –∫—ñ—Ç
    cat = db.collection.find_one({"name": name})
    if not cat:
        print(f"‚ùå –ö–æ—Ç–∞ –∑ —ñ–º'—è–º '{name}' –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")
        return 0
    
    # –ü–æ–∫–∞–∑–∞—Ç–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –∫–æ—Ç–∞ –ø–µ—Ä–µ–¥ –≤–∏–¥–∞–ª–µ–Ω–Ω—è–º
    print(f"\nüìã –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –∫–æ—Ç–∞, —è–∫–æ–≥–æ –±—É–¥–µ –≤–∏–¥–∞–ª–µ–Ω–æ:")
    print(f"üê± –Ü–º'—è: {cat['name']}")
    print(f"üìÖ –í—ñ–∫: {cat['age']} —Ä–æ–∫—ñ–≤")
    print(f"üîß –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏: {', '.join(cat['features'])}")
    
    confirmation = input("\n‚ö†Ô∏è –í–∏ –≤–ø–µ–≤–Ω–µ–Ω—ñ, —â–æ —Ö–æ—á–µ—Ç–µ –≤–∏–¥–∞–ª–∏—Ç–∏ —Ü—å–æ–≥–æ –∫–æ—Ç–∞? (—Ç–∞–∫/–Ω—ñ): ").strip().lower()
    
    if confirmation in ['—Ç–∞–∫', 'yes', 'y', '—Ç']:
        result = db.collection.delete_one({"name": name})
        
        if result.deleted_count > 0:
            print(f"‚úÖ –ö–æ—Ç–∞ '{name}' —É—Å–ø—ñ—à–Ω–æ –≤–∏–¥–∞–ª–µ–Ω–æ")
            return result.deleted_count
        else:
            print("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–¥–∞–ª–∏—Ç–∏ –∫–æ—Ç–∞")
            return 0
    else:
        print("‚ùå –í–∏–¥–∞–ª–µ–Ω–Ω—è —Å–∫–∞—Å–æ–≤–∞–Ω–æ")
        return 0
            

@handle_exceptions
def delete_all_cats(db):
    """
    –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è –≤—Å—ñ—Ö –∑–∞–ø–∏—Å—ñ–≤ —ñ–∑ –∫–æ–ª–µ–∫—Ü—ñ—ó
    """
    # –ü—ñ–¥—Ä–∞—Ö—É–Ω–æ–∫ –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –∑–∞–ø–∏—Å—ñ–≤ –ø–µ—Ä–µ–¥ –≤–∏–¥–∞–ª–µ–Ω–Ω—è–º
    count = db.collection.count_documents({})
    
    if count == 0:
        print("üì≠ –ö–æ–ª–µ–∫—Ü—ñ—è –≤–∂–µ –ø–æ—Ä–æ–∂–Ω—è")
        return 0
    
    print(f"\n‚ö†Ô∏è –£–í–ê–ì–ê: –í–∏ –∑–±–∏—Ä–∞—î—Ç–µ—Å—è –≤–∏–¥–∞–ª–∏—Ç–∏ –í–°–Ü–• –∫–æ—Ç—ñ–≤ ({count} –∑–∞–ø–∏—Å—ñ–≤)")
    confirmation = input("–¶—è –¥—ñ—è –Ω–µ–∑–≤–æ—Ä–æ—Ç–Ω—è! –í–≤–µ–¥—ñ—Ç—å 'Yes' –¥–ª—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è: ").strip().lower()
    
    if confirmation == "yes":
        result = db.collection.delete_many({})
        print(f"‚úÖ –£—Å–ø—ñ—à–Ω–æ –≤–∏–¥–∞–ª–µ–Ω–æ {result.deleted_count} –∫–æ—Ç—ñ–≤")
        return result.deleted_count
    else:
        print("‚ùå –í–∏–¥–∞–ª–µ–Ω–Ω—è –≤—Å—ñ—Ö –∑–∞–ø–∏—Å—ñ–≤ —Å–∫–∞—Å–æ–≤–∞–Ω–æ")
        return 0

@handle_exceptions
def display_menu():
    """
    –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é
    """
    print("\n" + "=" * 60)
    print("üê± –ú–ï–ù–ï–î–ñ–ï–† –ö–û–¢–Ü–í - CRUD –û–ü–ï–†–ê–¶–Ü–á –ó MongoDB")
    print("=" * 60)
    print("1. üìã –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –≤—Å—ñ—Ö –∫–æ—Ç—ñ–≤ (read all)")
    print("2. üîç –ó–Ω–∞–π—Ç–∏ –∫–æ—Ç–∞ –∑–∞ —ñ–º'—è–º (read by name)")
    print("3. ‚úèÔ∏è –û–Ω–æ–≤–∏—Ç–∏ –≤—ñ–∫ –∫–æ—Ç–∞ (update age)")
    print("4. üîß –î–æ–¥–∞—Ç–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫—É –∫–æ—Ç—É (add feature)")
    print("5. üóëÔ∏è –í–∏–¥–∞–ª–∏—Ç–∏ –∫–æ—Ç–∞ –∑–∞ —ñ–º'—è–º (delete by name)")
    print("6. üí• –í–∏–¥–∞–ª–∏—Ç–∏ –≤—Å—ñ—Ö –∫–æ—Ç—ñ–≤ (delete all)")
    print("7. üéØ –°—Ç–≤–æ—Ä–∏—Ç–∏ —Ç–µ—Å—Ç–æ–≤—ñ –¥–∞–Ω—ñ (create)")
    print("0. üö™ –í–∏—Ö—ñ–¥ (exit)")
    print("=" * 60)

@handle_exceptions
def close_connection(db):
    """
    –ó–∞–∫—Ä–∏—Ç—Ç—è –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ MongoDB
    """
    db.client.close()
    print("üîå –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ MongoDB –∑–∞–∫—Ä–∏—Ç–æ")